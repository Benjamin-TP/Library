<?xml version="1.0"?>
<xs:schema 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:lib="http://www.example.com/PO1" 
	targetNamespace="http://www.example.com/PO1" 
	elementFormDefault="qualified" 
	attributeFormDefault="unqualified">

 	<xs:element name="LIBRARY" type="lib:libraryType">

    <!--key of BOOK / reffering key on BORROWING-->
    <xs:key name="bookKey">
			<xs:selector xpath=".//lib:BOOK"/>
			<xs:field xpath="@idBook"/>
		</xs:key>
    <xs:keyref name="borrowingToBook" refer="lib:bookKey">
      <xs:selector xpath=".//lib:BORROWING"/>
			<xs:field xpath="@idBookRef"/>
		</xs:keyref>

    <!--key of author / reffering key on BOOKAUTHOR-->
    <xs:key name="authorKey">
			<xs:selector xpath=".//lib:AUTHOR"/>
			<xs:field xpath="@idAuthor"/>
		</xs:key>
    <xs:keyref name="bookToAuthor" refer="lib:authorKey">
      <xs:selector xpath=".//lib:BOOKAUTHOR"/>
			<xs:field xpath="@idAuthorRef"/>
		</xs:keyref>

    <!--key of BOOKSERIE / refkey on BOOKSER-->
    <xs:key name="bookSerieKey">
			<xs:selector xpath=".//lib:BOOKSERIE"/>
			<xs:field xpath="@idBS"/>
		</xs:key>
    <xs:keyref name="bookSerToBookSerie" refer="lib:bookSerieKey">
			<xs:selector xpath=".//lib:BOOKSER"/>
			<xs:field xpath="@idBSRef"/>
		</xs:keyref>

    <!--key of COMICBOOKSERIE / refkey on COMICBOOKSER-->
    <xs:key name="comicBookSerieKey">
			<xs:selector xpath=".//lib:COMICBOOKSERIE"/>
			<xs:field xpath="@idCBS"/>
		</xs:key>
    <xs:keyref name="comicBookSerToComicBookSerie" refer="lib:comicBookSerieKey">
			<xs:selector xpath=".//lib:COMICBOOKSER"/>
			<xs:field xpath="@idCBSRef"/>
		</xs:keyref>

    <!--key of NEWSPAPERSERIE / refkey on NEWSPAPERSER-->
    <xs:key name="newspaperSerieKey">
			<xs:selector xpath=".//lib:NEWSPAPERSERIE"/>
			<xs:field xpath="@idNWS"/>
		</xs:key>
    <xs:keyref name="newspaperSerToNewspaperSerie" refer="lib:newspaperSerieKey">
			<xs:selector xpath=".//lib:NEWSPAPERSER"/>
			<xs:field xpath="@idNWSRef"/>
		</xs:keyref>

  </xs:element>


  <xs:complexType name="libraryType">
    <xs:sequence>
      <!--By default, minOccurs and maxOccurs equal to 1, hence not specified
      minOccurs="1" maxOccurs="unbounded"
      -->
      <!--List of Books, comic, newspaper-->
      <xs:element name="BOOKS" type="lib:booksType"/>

      <!--List of borrowers-->
      <xs:element name="BORROWERS" type="lib:borrowersType"/>

      <!--Series elements-->
      <xs:element name="BOOKSERIES" type="lib:bookSeriesType"/>
      <xs:element name="COMICBOOKSERIES" type="lib:comicBookSeriesType"/>
      <xs:element name="NEWSPAPERSERIES" type="lib:newspaperSeriesType"/>

      <!--List of authors
      22.06.17 changed: list removed (used in the BOOKS element instead)
      replaced with AUTHOR one by one instead
      -->
      <xs:element name="AUTHORS" type="lib:authorsType"/>

    </xs:sequence>
  </xs:complexType>


  <xs:complexType name="booksType">
		<xs:sequence>
			<xs:element name="BOOK" type="lib:bookType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  <xs:complexType name="authorsType">
		<xs:sequence>
			<xs:element name="AUTHOR" type="lib:authorType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  <xs:complexType name="borrowersType">
		<xs:sequence>
			<xs:element name="BORROWER" type="lib:borrowerType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>


  <xs:complexType name="bookType">
		<xs:sequence>
      <!--For the book parameters: simpleType defined (with restriction on the values)
      Theme/ThemeID
      TargetReader/
      Editor/
      BookType/editor
      -->
      <xs:element name="TITLE" type="xs:string"/>
      <xs:element name="DESCRIPTION" type="xs:string" minOccurs="0"/> <!--Not mandatory for newspapers-->
      <xs:element name="ISBN" type="lib:ISBNType" minOccurs="0"/> <!--Not mandatory for newspapers-->

      <!--Book parameters-->
      <xs:element name="BOOKFORMAT" type="lib:bookFormatType"/>
      <xs:element name="THEME" type="lib:themeType"/>
      <xs:element name="TARGETREADER" type="lib:targetReaderType"/>
      <xs:element name="EDITOR" type="lib:editorType"/>

      <xs:element name="RELEASEDATE" type="lib:customDateType"/>
      <xs:element name="PURCHASEDATE" type="lib:customDateType"/>

      <!--BookAuthors
      minOccurs="0" because for some books we dont have the author(s) (newspapers, "le roman de renart"...)
      -->
      <xs:element name="BOOKAUTHORS" type="lib:bookAuthorsType" minOccurs="0"/>
      <!--Series elements
      minOccurs, maxOccurs : 1 by default
      Some books are "one-shot" hence minOccurs="0"
      -->
      <xs:choice minOccurs="0">
        <xs:element name="BOOKSER" type="lib:bookSerType"/>
        <xs:element name="COMICBOOKSER" type="lib:comicBookSerType"/>
        <xs:element name="NEWSPAPERSER" type="lib:newspaperSerType"/>
      </xs:choice>

      <!--BORROWABLE
      not borrowable for two reasons
      - for read-here only (e.g. for newspapers released recently)
      - already borrowed by someone
      -->
      <xs:element name="BORROWABLE" type="xs:boolean"/>
      
      <!--Number of borrows - for statistics-->
      <xs:element name="NROFBORROWS" type="xs:integer"/>

		</xs:sequence>

    <xs:attribute name="idBook" type="lib:idBookT" use="required"/>
	</xs:complexType>

  <!--BookAuthors
  List which contains BookAuthor
  Each BookAuthor refers to an Author
  -->
  <xs:complexType name="bookAuthorsType">
		<xs:sequence>
      <xs:element name="BOOKAUTHOR" type="lib:bookAuthorType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  <!--BookAuthor: 
  - one ROLE element for the role in the creation (writer, illustrator...)
  - At most 5 roles per BOOKAUTHOR (there are only five choices)
  - one attribute for the reference to Author-->
  <xs:complexType name="bookAuthorType">
    <xs:sequence>
      <xs:element name="ROLE" type="lib:roleType" maxOccurs="5"/>
    </xs:sequence>
		<xs:attribute name="idAuthorRef" type="lib:idAuthorT" use="required"/>
	</xs:complexType>

  <!--roleType used by bookAuthorType-->
  <xs:simpleType name="roleType">
    <xs:restriction base="xs:string">
        <xs:enumeration value="Novelist"/><!--Romancier-->
        <xs:enumeration value="Writer"/><!--Ecrivain - more "generalist"-->
        <xs:enumeration value="Scriptwriter"/><!--Scenariste-->
        <xs:enumeration value="Illustrator"/><!--Dessins-->
        <xs:enumeration value="Colourist"/><!--Coloriste-->
    </xs:restriction>
  </xs:simpleType>


  <!--Complex types for the link between book and the series-->
  <!--The three following elements are in an BOOK element
  bookSerType refers to a bookSerieType (idBSref to idBS)
  comicBookSerType refers to a comicBookSerieType (idCBSref to idCBS)
  newspaperSerType refers to a newspaperSerieType (idNWSref to idNWS)
  -->
  <xs:complexType name="bookSerType">
		<xs:attribute name="idBSRef" type="lib:idBST" use="required"/>
	</xs:complexType>

  <xs:complexType name="comicBookSerType">
		<xs:attribute name="idCBSRef" type="lib:idCBST" use="required"/>
	</xs:complexType>

  <xs:complexType name="newspaperSerType">
    <!--The NEWSPAPERSER element contains period info-->
    <xs:sequence>
      <xs:element name="PERIODSTARTDATE" type="lib:customDateType"/>
      <xs:element name="PERIODENDDATE" type="lib:customDateType"/>
    </xs:sequence>
		<xs:attribute name="idNWSRef" type="lib:idNWST" use="required"/>
	</xs:complexType>

  <!--Theme type with restriction / pattern (or restriction / enumeration)
  Same for TargetReader, Editor, BookFormat
  -->
  <xs:simpleType name="bookFormatType">
    <xs:restriction base="xs:string">
        <xs:enumeration value="Book"/>
        <xs:enumeration value="Comic"/>
        <xs:enumeration value="Newspaper"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="themeType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="History"/>
      <xs:enumeration value="Politics"/>
      <xs:enumeration value="Novel"/>
      <xs:enumeration value="Science"/>
      <xs:enumeration value="Nature"/>
      <xs:enumeration value="Animals"/>
      <xs:enumeration value="Painting"/>
      <xs:enumeration value="Arts"/>
      <xs:enumeration value="Tales"/>
      <xs:enumeration value="Economics"/>
      <xs:enumeration value="Finance"/>
      <xs:enumeration value="Action"/>
      <xs:enumeration value="Adventure"/>
      <xs:enumeration value="Sport"/>
      <xs:enumeration value="Society"/>
      <xs:enumeration value="Philosophy"/>
      <xs:enumeration value="Religion"/>
      <xs:enumeration value="General"/>
      <xs:enumeration value="Autobiography"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="targetReaderType">
    <xs:restriction base="xs:string">
      <xs:pattern value="0-3|4-6|7-11|12-15|Adult"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="editorType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Bayard"/>
      <xs:enumeration value="Fleurus Presse"/>
      <xs:enumeration value="Grasset"/>
      <xs:enumeration value="Futuropolis"/>
      <xs:enumeration value="Aire libre"/>
      <xs:enumeration value="Dupuis"/>
      <xs:enumeration value="Fayard"/>
      <xs:enumeration value="Dargaud"/>
      <xs:enumeration value="Glénat"/>
      <xs:enumeration value="Casterman"/>
      <xs:enumeration value="Plon"/>
      <xs:enumeration value="Perrin"/>
      <xs:enumeration value="JCLattès"/>
      <xs:enumeration value="Flammarion"/>
      <xs:enumeration value="Albin Michel"/>
      <xs:enumeration value="La Découverte"/>
      <xs:enumeration value="Bréal"/>
      <xs:enumeration value="Desclée De Brouwer"/>
      <xs:enumeration value="Denoël"/>
      <xs:enumeration value="HongFei"/>
      <xs:enumeration value="Milan"/>
      <xs:enumeration value="BIBLI O"/>
      <xs:enumeration value="J'ai lu"/>
      <xs:enumeration value="Michel Lafon"/>
      <xs:enumeration value="Librio"/>
      <xs:enumeration value="First"/>
      <xs:enumeration value="Nathan"/>
      <xs:enumeration value="Nord-Sud"/>
      <xs:enumeration value="Groupe Amaury"/>
      <xs:enumeration value="Steinkis"/>
      <xs:enumeration value="Le Livre de Poche"/>
      <xs:enumeration value="Folio"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="authorType">
		<xs:sequence>
      <xs:element name="FIRSTNAME" type="xs:string"/>
      <xs:element name="LASTNAME" type="xs:string"/>
      <xs:element name="BIRTHDATE" type="lib:customDateType"/>
      <xs:element name="DEATHDATE" type="lib:customDateType"/>
		</xs:sequence>
    <xs:attribute name="idAuthor" type="lib:idAuthorT" use="required"/>
	</xs:complexType>

  <xs:complexType name="borrowerType">
		<xs:sequence>
      <xs:element name="FIRSTNAME" type="xs:string"/>
      <xs:element name="LASTNAME" type="xs:string"/>
      <xs:element name="BIRTHDATE" type="lib:customDateType"/>
      <xs:element name="BORROWINGS" type="lib:borrowingsType"/>
		</xs:sequence>
    <xs:attribute name="idBorrower" type="lib:idBorrowerT" use="required"/>
	</xs:complexType>

  <xs:complexType name="borrowingsType">
		<xs:sequence>
      <!--Max number of borrowings with maxOccurs-->
      <xs:element name="BORROWING" type="lib:borrowingType" minOccurs="0" maxOccurs="10"/>
		</xs:sequence>
	</xs:complexType>

  <xs:complexType name="borrowingType">
    <xs:sequence>
      <xs:element name="BORROWDATE" type="lib:customDateType"/>
      <xs:element name="RETURNDATE" type="lib:customDateType"/>
    </xs:sequence>
		<xs:attribute name="idBookRef" type="lib:idBookT" use="required"/>
	</xs:complexType>
 
  <!--The BookSeries list containt BookSerie elements-->
  <xs:complexType name="bookSeriesType">
		<xs:sequence>
      <xs:element name="BOOKSERIE" type="lib:bookSerieType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
  
  <!--BookSerie contained in the BookSeries list-->
  <xs:complexType name="bookSerieType">
		<xs:sequence>
      <xs:element name="TITLE" type="xs:string"/>
      <xs:element name="DESCRIPTION" type="xs:string"/>
      <xs:element name="NROFVOLUMES" type="xs:integer"/>
		</xs:sequence>
    <xs:attribute name="idBS" type="lib:idBST" use="required"/>
	</xs:complexType>


  <!--The ComicBookSeries list containt BookSerie elements-->
  <xs:complexType name="comicBookSeriesType">
		<xs:sequence>
      <xs:element name="COMICBOOKSERIE" type="lib:comicBookSerieType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
  
  <!--ComicBookSerie contained in the ComicBookSeries list-->
  <xs:complexType name="comicBookSerieType">
		<xs:sequence>
      <xs:element name="TITLE" type="xs:string"/>
      <xs:element name="DESCRIPTION" type="xs:string"/>
      <xs:element name="NROFVOLUMES" type="xs:integer"/>
		</xs:sequence>
    <xs:attribute name="idCBS" type="lib:idCBST" use="required"/>
	</xs:complexType>


  <!--The NewspaperSeries list contains NewspaperSerie elements-->
  <xs:complexType name="newspaperSeriesType">
		<xs:sequence>
      <xs:element name="NEWSPAPERSERIE" type="lib:newspaperSerieType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>

  <xs:complexType name="newspaperSerieType">
		<xs:sequence>
      <xs:element name="ISSN" type="lib:ISSNType"/>
      <xs:element name="TITLE" type="xs:string"/>
      <xs:element name="DESCRIPTION" type="xs:string"/>
      <xs:element name="NROFVOLUMES" type="xs:integer"/>
      <xs:element name="FREQUENCY" type="lib:frequencyType"/>
		</xs:sequence>
    <xs:attribute name="idNWS" type="lib:idNWST" use="required"/>
	</xs:complexType>

  <!--Frequency types list for the newspaper-->
  <xs:simpleType name="frequencyType">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Daily"/>
      <xs:enumeration value="Weekly"/>
      <xs:enumeration value="Fortnightly"/>
      <xs:enumeration value="Monthly"/>
      <xs:enumeration value="Bimonthly"/>
      <xs:enumeration value="Biannual"/>
      <xs:enumeration value="Annual"/>
    </xs:restriction>
  </xs:simpleType>


  <!--simpleType with restrictions for dates, ISBN and ISSN-->
  <!--customDateType: similar to what we saw in the course, but with yyyy-mm-dd instead
  It is be better for sorting by date in xslt transformation
  The pattern accepts empty dates
  -->
  <xs:simpleType name="customDateType">
    <xs:restriction base="xs:string">
      <xs:pattern value="(\d{4}-\d{2}-\d{2}|)"/>
    </xs:restriction>
  </xs:simpleType>

  <!--ISBN for the BOOK
  The pattern accepts empty ISBN (it is mandatory for a bookshop, but not for a library)-->
  <xs:simpleType name="ISBNType">
    <xs:restriction base="xs:string">
      <xs:pattern value="((\d{3}-|)\d{1}-\d{4}-\d{4}-(\d{1}|X)|)"/>
    </xs:restriction>
  </xs:simpleType>

  <!--ISSN for NEWSPAPERSERIE
  I chose to force filling the ISSN, since a newspaper always have one-->
  <xs:simpleType name="ISSNType">
    <xs:restriction base="xs:string">
      <xs:pattern value="ISSN \d{4}-\d{3}(\d|X)"/>
    </xs:restriction>
  </xs:simpleType>


  <!--6 below simpleType for the 6 key / keyref pairs (actually, for the attributes) we have
  In order to have "strutured" attribute ids
  The 2nd part of the pattern is arbitrarily limited to 7 digits, for limiting the system
  7 digits means: at most 10 millions - 1 books/authors, etc.
  -->
  <xs:simpleType name="idBookT">
    <xs:restriction base="xs:string">
      <xs:pattern value="b\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="idAuthorT">
    <xs:restriction base="xs:string">
      <xs:pattern value="a\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="idBST">
    <xs:restriction base="xs:string">
      <xs:pattern value="bs\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="idCBST">
    <xs:restriction base="xs:string">
      <xs:pattern value="cbs\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="idNWST">
    <xs:restriction base="xs:string">
      <xs:pattern value="nws\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="idBorrowerT">
    <xs:restriction base="xs:string">
      <xs:pattern value="bo\d{1,7}"/>
    </xs:restriction>
  </xs:simpleType>

</xs:schema>